function rossmo_gui
% ROSSMO_GUI
%   Creates and displays geographical profileing maps
%   for random Delunay cities.
%   All parameters are configurable.
%   Distance metrics available : euclidian, manhattan, dijkstra

%-------------------------------------------------------------------------
% Initialization tasks
close all
clear all
addpath './rossmo'

% figure init
fh = figure('Visible','off','Position',[400,200,800,600]);

% variables init
%distance functions
distE = @(x1,x2,y1,y2) sqrt((x1-x2).^2 + (y1-y2).^2);
distM = @(x1,x2,y1,y2) abs(x1-x2)+abs(y1-y2);
% generate default set
setUpCity;


%-------------------------------------------------------------------------
% Construct the components
ph_city = uipanel('Parent',fh,...
    'Position',[.55,.7,.4,.25],...
    'Title','City parameters');
ph_param = uipanel('Parent',fh,...
    'Position',[.55,.4,.4,.25],...
    'Title','Profiling parameters');
ph_plot = uipanel('Parent',fh,...
    'Position',[.55,.05,.4,.30],...
    'Title','Plot options');
ha = axes('Parent',fh,...
    'Units','Normalized',...
    'Position',[.05,.05,.45,.85]);
% city panel
ch_npts_edit = uicontrol('Parent',ph_city,...
    'Style','edit',...
    'String',num2str(city.npts),...
    'Callback',{@npts_edit},...
    'Position',[20,80,100,25]...
    );
ch_npts_text = uicontrol('Parent',ph_city,...
    'Style','text',...
    'String','Npts in city',...
    'Position',[20,110,100,15]...
    );
ch_xkm_edit = uicontrol('Parent',ph_city,...
    'Style','edit',...
    'String',num2str(city.x_km),...
    'Callback',{@xkm_edit},...
    'Position',[130,80,80,25]...
    );
ch_xkm_text = uicontrol('Parent',ph_city,...
    'Style','text',...
    'String','X dim (km)',...
    'Position',[130,110,80,15]...
    );
ch_ykm_edit = uicontrol('Parent',ph_city,...
    'Style','edit',...
    'String',num2str(city.y_km),...
    'Callback',{@ykm_edit},...
    'Position',[220,80,80,25]...
    );
ch_ykm_text = uicontrol('Parent',ph_city,...
    'Style','text',...
    'String','Y dim (km)',...
    'Position',[220,110,80,15]...
    );
ch_genDelCity = uicontrol('Parent',ph_city,...
    'Style','pushbutton',...
    'String','Generate city',...
    'Callback',{@genDelCity_callback},...
    'Position',[20,20,120,35]...
    );
ch_loadDefaultCity = uicontrol('Parent',ph_city,...
    'Style','pushbutton',...
    'String','Default city',...
    'Callback',{@loadDefaultCity_callback},...
    'Position',[180,20,120,35]...
    );

% profiling panel
ch_f_edit = uicontrol('Parent',ph_param,...
    'Style','edit',...
    'String',num2str(city.f),...
    'Callback',{@f_edit},...
    'Position',[20,80,100,25]...
    );
ch_f_text = uicontrol('Parent',ph_param,...
    'Style','text',...
    'String','f value',...
    'Position',[20,110,80,15]...
    );
ch_g_edit = uicontrol('Parent',ph_param,...
    'Style','edit',...
    'String',num2str(city.g),...
    'Callback',{@g_edit},...
    'Position',[130,80,80,25]...
    );
ch_g_text = uicontrol('Parent',ph_param,...
    'Style','text',...
    'String','g value',...
    'Position',[130,110,80,15]...
    );
ch_B_edit = uicontrol('Parent',ph_param,...
    'Style','edit',...
    'String',num2str(city.B),...
    'Callback',{@B_edit},...
    'Position',[220,80,80,25]...
    );
ch_B_text = uicontrol('Parent',ph_param,...
    'Style','text',...
    'String','B value (km)',...
    'Position',[220,110,80,15]...
    );
ch_ncrimes_edit = uicontrol('Parent',ph_param,...
    'Style','edit',...
    'String',num2str(city.ncrimes),...
    'Callback',{@ncrimes_edit},...
    'Position',[20,20,100,25]...
    );
ch_ncrimes_text = uicontrol('Parent',ph_param,...
    'Style','text',...
    'String','Ncrimes in city',...
    'Position',[20,55,100,15]...
    );
ch_doProfile = uicontrol('Parent',ph_param,...
    'Style','pushbutton',...
    'String','Launch profiling',...
    'Callback',{@doProfile_callback},...
    'Position',[180,20,120,35]...
    );
% plot options
ch_plotE = uicontrol('Parent',ph_plot,...
    'Style','pushbutton',...
    'String','Euclidean',...
    'Callback',{@doPlot_callback,'E'},...
    'Position',[20,110,280,35]...
    );
ch_plotM = uicontrol('Parent',ph_plot,...
    'Style','pushbutton',...
    'String','Manhattan',...
    'Callback',{@doPlot_callback,'M'},...
    'Position',[20,65,280,35]...
    );
ch_plotD = uicontrol('Parent',ph_plot,...
    'Style','pushbutton',...
    'String','Dijkstra',...
    'Callback',{@doPlot_callback,'D'},...
    'Position',[20,20,280,35]...
    );
%-------------------------------------------------------------------------
% Initialization taks (post component creation)
set(fh,'Visible','on');
%-------------------------------------------------------------------------
% Callbacks
% city parameters
    function npts_edit(source,eventdata)
        city.npts = floor(str2double(get(source,'string')));
        if isnan(city.npts)
            errordlg('Enter a numeric value','Bad Input','modal');
            return
        end
        set(source,'string', num2str(city.npts));
    end
    function xkm_edit(source,eventdata)
        city.x_km = str2double(get(source,'string'));
        if isnan(city.xkm)
            errordlg('Enter a numeric value','Bad Input','modal');
            return
        end
    end
    function ykm_edit(source,eventdata)
        city.y_km = str2double(get(source,'string'));
        if isnan(city.ykm)
            errordlg('Enter a numeric value','Bad Input','modal');
            return
        end
    end
    function genDelCity_callback(source,eventdata)
        run_Delaunay;
        run_Profiling;
        plotCity;
    end
    function loadDefaultCity_callback(source,eventdata)
        setUpCity;
        plotCity;
    end

% profiling callbacks
    function f_edit(source,eventdata)
        city.f = str2double(get(source,'string'));
        if isnan(city.f)
            errordlg('Enter a numeric value','Bad Input','modal');
            return
        end
    end
    function g_edit(source,eventdata)
        city.g = str2double(get(source,'string'));
        if isnan(city.g)
            errordlg('Enter a numeric value','Bad Input','modal');
            return
        end
    end
    function B_edit(source,eventdata)
        city.B = str2double(get(source,'string'));
        if isnan(city.B)
            errordlg('Enter a numeric value','Bad Input','modal');
            return
        end
    end
    function ncrimes_edit(source,eventdata)
        city.ncrimes = floor(str2double(get(source,'string')));
        if isnan(city.ncrimes)
            errordlg('Enter a numeric value','Bad Input','modal');
            return
        end
        set(source,'string', num2str(city.ncrimes));
        city.icrimes = ceil(city.npts*rand(city.ncrimes,1));
    end

    function doProfile_callback(source,eventdata)
        run_Profiling;
    end

    function doPlot_callback(source,eventdata,Pletter)
        
        switch Pletter;
            case 'E'
                Pscaled = city.PscaledE;
            case 'M'
                Pscaled = city.PscaledM;
            case 'D'
                Pscaled = city.PscaledD;
        end
        
        hold off;
        triplot(city.TRI,city.x,city.y);
        hold on;
        scatter(city.x,city.y,70,Pscaled,'fill');
        scatter(city.x(city.icrimes),city.y(city.icrimes),...
            100,'s');
        title(get(source,'string'),'FontSize',14);
        axis([min(city.x),max(city.x),min(city.y),max(city.y)]);
        colorbar
    end

%-------------------------------------------------------------------------
% Utility functions
    function setUpCity
        city=load('rossmoTestData.mat');
        city.ncrimes = length(city.icrimes);
    end
    function run_Delaunay
        [city.x,city.y,city.distanceTable,city.TRI] = ...
            genDelaunayCity(city.x_km, city.y_km, city.npts);
    end
    function run_Profiling
        city.PscaledE = rossmoIrreg(city.x,city.y,city.icrimes,...
            city.f,city.g,city.B,...
            distE);
        city.PscaledM = rossmoIrreg(city.x,city.y,city.icrimes,...
            city.f,city.g,city.B,...
            distM);
        city.PscaledD = rossmoDijkstra(city.icrimes,...
            city.f,city.g,city.B,...
            city.distanceTable);
    end
    function plotCity
        hold off;
        triplot(city.TRI,city.x,city.y);
        title('City','FontSize',14);
    end

end